#Big Configuration Space


-no-preprocess{0,1}[0] #Disable all preprocessing 
pre-cs1 {0,1}[1] #confl_1sub
pre-csk {0,1}[0] #confl_ksub
pre-ve{0,1}[1] #var_elim
pre-s0{0,1}[1] #0sub
pre-s1{0,1}[1] #1sub
pre-s2{0,1}[0] #2sub
pre-r{0,1}[0] #repeated_sub
pre-de{0,1}[0] #def_elim
pre-ud{0,1}[0] #unit_def
pre-h1{0,1}[0] #hyper1_res
pre-pl{0,1}[0] #pure_literal
pre-as{0,1}[0] #asym_branch
pre-all{0,1}[0] #keep_all
pre-det{0,1}[0] #no_random
pre-pre{0,1}[0] #pre_sat
#pre-ext{0,1}[0] #ext_sat ( Not using this option)

#CORE OPTIONS:
glu-rnd-init{0,1}[0] #Randomize the initial activity
glu-gc-frac	{0.05,0.1,0.15,0.2,0.25,0.3,0.35,0.4,0.5,0.6,0.7,0.8,0.9,1}[0.2]	#The fraction of wasted memory allowed before a garbage collection is triggered
#glu-rnd-seed{1,2,3,4,9.16483e+07}[9.16483e+07]	#Random Seed (Used by the random variable selection)
glu-rnd-freq{0,0.0001, 0.001, 0.005, 0.01, 0.05,0.1,0.15,0.2,0.25,0.3,0.4,0.5,0.6,0.7,0.8,0.9,1}[0]	#The frequency with which the decision heuristic tries to choose a random variable
glu-cla-decay{0.9999,0.999,0.995,0.99,0.98,0.97,0.96,0.95,0.9,0.8,0.7,0.6,0.5}[0.999]	#The clause activity decay factor
glu-var-decay{0.9999,0.999,0.995,0.99,0.98,0.97,0.96,0.95,0.9,0.8,0.7,0.6,0.5}[0.95]	#The variable activity decay factor
glu-phase-saving{0,1,2}[2] 	#Controls the level of phase saving (0=none, 1=limited, 2=full)
glu-ccmin-mode{0,2}[2] 	#Controls conflict clause minimization (0=none, 1=basic, 2=deep). DISABLED OPTION 1 since it triggers bugs (calling SAT instances UNSAT)

#CORE -- MINIMIZE OPTIONS:
glu-minSizeMinimizingClause{3,4,5,6,7,8,9,10,15,20,30,50,75,100,200,500,1000,214783647}[30]	#The min size required to minimize clause
glu-minLBDMinimizingClause{3,4,5,6,7,8,9,10,15,20,30,50,75,100,200,500,1000,214783647}[6]	#The min LBD required to minimize clause

#CORE -- REDUCE OPTIONS:
glu-incReduceDB{0,1,2,5,10,30,100,200,250,300,350,400,500,1000,4000}[300]	#Increment for reduce DB
glu-firstReduceDB{100,400,1000,2000,3000,3500,4000,4500,5000,6000,10000,40000,100000}[4000]	#The number of conflicts before the first reduce DB
glu-minLBDFrozenClause{0,1,2,3,4,5,6,7,8,9,10,15,20,25,30,35,40,45,50,100,214783647}[30]	#Protect clauses if their LBD decrease and is lower than (for one turn)
glu-specialIncReduceDB{0,100,500,750,1000,1250,1500,2000,4000,10000}[1000] #Special increment for reduce DB

#CORE -- RESTART OPTIONS:
glu-R{1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,2,3,4,4.99}[1.4] #The constant used to block restart
glu-K{0.01,0.5,0.6,0.65,0.7,0.75,0.8,0.85,0.9,0.95,0.99,0.999}[0.8] #The constant used to force restart
glu-szTrailQueue{10,100,1000,2000,4000,4500,5000,5500,6000,10000,100000,214783647}[5000] #The size of moving average for trail (block restarts)
glu-szLBDQueue{10,30,40,45,47,48,49,50,51,52,53,55,60,100,1000,214783647}[50] #The size of moving average for LBD (restarts)

pre-cs1|-no-preprocess in {0}
pre-csk|-no-preprocess in {0}
pre-ve|-no-preprocess in {0}
pre-s0|-no-preprocess in {0}
pre-s1|-no-preprocess in {0}
pre-s2|-no-preprocess in {0}
pre-r|-no-preprocess in {0}
pre-de|-no-preprocess in {0}
pre-ud|-no-preprocess in {0}
pre-h1|-no-preprocess in {0}
pre-pl|-no-preprocess in {0}
pre-as|-no-preprocess in {0}
pre-all|-no-preprocess in {0}
pre-det|-no-preprocess in {0}
pre-pre|-no-preprocess in {0}
